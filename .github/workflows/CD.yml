on:
  push:
    branches:
    - main

name: CD

jobs:
  infrastructure:
    runs-on: ubuntu-22.04
    env:
      TF_VAR_mongodb_atlas_public_key: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
      TF_VAR_mongodb_atlas_private_key: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: terraform-setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.1
    - name: stage
      run: echo "STAGE=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: run
      run: |
        cd ./infrastructure/
        terraform fmt -check -diff -recursive -no-color
        terraform init -backend=true -get=true -reconfigure -upgrade
        terraform workspace select -or-create $STAGE
        terraform plan -no-color -refresh=true -var-file=./vars/$STAGE.tfvars
        terraform apply -no-color -auto-approve -var-file=./vars/$STAGE.tfvars
  test:
    runs-on: ubuntu-20.04
    needs: [infrastructure]
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: stage
      run: echo "STAGE=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: run
      run: docker-compose -f "docker-compose.yml" run api-test
  code:
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - id: aws-cli
      uses: unfor19/install-aws-cli-action@v1
      with:
        version: 2
    - name: ssh
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: |
          ${{ secrets.INSTANCES_SSH_PRIVATE_KEY }}
    - name: install
      run: |
        python -m pip install --upgrade pip
        pip install boto3==1.34.139 fabric==3.2.2 termcolor==2.4.0
        echo "v=$(echo $GITHUB_SHA | cut -c1-8)" > /tmp/.env
    - name: instances-deploy
      run: fab instances-deploy ${GITHUB_REF##*/}
